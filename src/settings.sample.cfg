[Settings]
# JSON data exported from the provider, for the resources to import
JSON_DATA_FILE = data/provider_data.json
# Terraform state file, this can be the latest copy
TERRAFORM_STATE_FILE= data/terraform.tfstate
# Output script for 'terraform import'
TERRAFORM_IMPORT_SCRIPT = data/import.sh
# Skeleton .tf file for the imported resources
TERRAFORM_SKELETON_TF_FILE = data/skeleton.tf
# Final terraform file with full imported resources
TERRAFORM_RESOURCE_TF_FILE= data/resources.tf
# JSON file with attrubites per resource to import to TERRAFORM_RESOURCE_TF_FILE
TERRAFORM_MAPPING_FILE= data/mapping.json 

[azure]
JSON_DATA_FILE = data/azure/provider_data.json
TERRAFORM_STATE_FILE= data/azure/terraform.tfstate
# Output script for 'terraform import'
TERRAFORM_IMPORT_SCRIPT = data/azure/import.sh
# Skeleton .tf file for the imported resources
TERRAFORM_SKELETON_TF_FILE = data/azure/skeleton.tf
# Final terraform file with full imported resources
TERRAFORM_RESOURCE_TF_FILE= data/azure/resources.tf
# JSON file with attrubites per resource to import to TERRAFORM_RESOURCE_TF_FILE
TERRAFORM_MAPPING_FILE= data/azure/mapping.json 
# Terraform provider resource type
TERRAFORM_RESOURCE_TYPE = azurerm_backup_protected_file_share
# Provider resource filter
PROVIDER_RESOURCE_FILTER_KEY = name
PROVIDER_RESOURCE_FILTER_VALUE = AzureFileShare
# The name of the key where the resource id is stored by the provider
PROVIDER_RESOURCE_ID_KEY = id
# Dot path to the resource name
PROVIDER_RESOURCE_NAME_KEY = properties.friendlyName

[aws]
JSON_DATA_FILE = data/aws/provider_data_ec2.json
TERRAFORM_STATE_FILE= data/aws/terraform.tfstate
# Output script for 'terraform import'
TERRAFORM_IMPORT_SCRIPT = data/aws/import.sh
# Skeleton .tf file for the imported resources
TERRAFORM_SKELETON_TF_FILE = data/aws/skeleton.tf
# Final terraform file with full imported resources
TERRAFORM_RESOURCE_TF_FILE= data/aws/resources.tf
# JSON file with attrubites per resource to import to TERRAFORM_RESOURCE_TF_FILE
TERRAFORM_MAPPING_FILE= data/aws/mapping.json 
# Terraform provider resource type
TERRAFORM_RESOURCE_TYPE = aws_instance
# Provider resource filter
PROVIDER_RESOURCE_FILTER_KEY = InstanceId
PROVIDER_RESOURCE_FILTER_VALUE = i-deadbeef
# The name of the key that contains the list of resources
PROVIDER_RESOURCE_ROOT = Reservations
# The name of the key where the resource id is stored by the provider
PROVIDER_RESOURCE_ID_KEY = InstanceId
# Dot path to the resource name
PROVIDER_RESOURCE_NAME_KEY = Instances.[0].Tags:Name

[aws-efs]
JSON_DATA_FILE = data/aws/provider_data_efs.json
TERRAFORM_STATE_FILE= data/aws/terraform.tfstate
# Output script for 'terraform import'
TERRAFORM_IMPORT_SCRIPT = data/aws/import.sh
# Skeleton .tf file for the imported resources
TERRAFORM_SKELETON_TF_FILE = data/aws/skeleton.tf
# Final terraform file with full imported resources
TERRAFORM_RESOURCE_TF_FILE= data/aws/resources.tf
# JSON file with attrubites per resource to import to TERRAFORM_RESOURCE_TF_FILE
TERRAFORM_MAPPING_FILE= data/aws/mapping.json 
# Terraform provider resource type
TERRAFORM_RESOURCE_TYPE = aws_efs
# The name of the key that contains the list of resources
PROVIDER_RESOURCE_ROOT = FileSystems
# The name of the key where the resource id is stored by the provider
PROVIDER_RESOURCE_ID_KEY = FileSystemId
# Dot path to the resource name
PROVIDER_RESOURCE_NAME_KEY = Tags:Name

[gcp]
JSON_DATA_FILE = data/gcp/provider_data.json
TERRAFORM_STATE_FILE= data/gcp/terraform.tfstate
# Output script for 'terraform import'
TERRAFORM_IMPORT_SCRIPT = data/gcp/import.sh
# Skeleton .tf file for the imported resources
TERRAFORM_SKELETON_TF_FILE = data/gcp/skeleton.tf
# Final terraform file with full imported resources
TERRAFORM_RESOURCE_TF_FILE= data/gcp/resources.tf
# JSON file with attrubites per resource to import to TERRAFORM_RESOURCE_TF_FILE
TERRAFORM_MAPPING_FILE= data/gcp/mapping.json 
# Terraform provider resource type
TERRAFORM_RESOURCE_TYPE = google_compute_instance
# The name of the key that contains the list of resources
PROVIDER_RESOURCE_ROOT = ""
# The name of the key where the resource id is stored by the provider
PROVIDER_RESOURCE_ID_KEY = id
# Dot path to the resource name
PROVIDER_RESOURCE_NAME_KEY = name

[digitalocean]
JSON_DATA_FILE = data/digitalocean/provider_data.json
TERRAFORM_STATE_FILE= data/digitalocean/terraform.tfstate
# Output script for 'terraform import'
TERRAFORM_IMPORT_SCRIPT = data/digitalocean/import.sh
# Skeleton .tf file for the imported resources
TERRAFORM_SKELETON_TF_FILE = data/digitalocean/skeleton.tf
# Final terraform file with full imported resources
TERRAFORM_RESOURCE_TF_FILE= data/digitalocean/resources.tf
# JSON file with attrubites per resource to import to TERRAFORM_RESOURCE_TF_FILE
TERRAFORM_MAPPING_FILE= data/digitalocean/mapping.json 
# Terraform provider resource type
TERRAFORM_RESOURCE_TYPE = digitalocean_droplet
# The name of the key that contains the list of resources
PROVIDER_RESOURCE_ROOT = ""
# The name of the key where the resource id is stored by the provider
PROVIDER_RESOURCE_ID_KEY = id
# Dot path to the resource name
PROVIDER_RESOURCE_NAME_KEY = name